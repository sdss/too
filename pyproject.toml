[project]
name = "sdss-too"
version = "1.0.1"
description = "Targets of Opportunity (ToO) for SDSS-V"
authors = [ { name = "José Sánchez-Gallego", email = "gallegoj@uw.edu" } ]
license = { text = "BSD-3-Clause" }
readme = "README.md"
include = []

requires-python = ">=3.12,<3.13"

dependencies = [
    "sdsstools>=1.8.2",
    "sdss-target-selection>=1.3.19",
    "adbc-driver-postgresql>=1.2.0",
    "httpx>=0.27.0",
    "rich>=13.7.0",
    "sdssdb>=0.12.2",
    "pyarrow>=18.0.0",
    "astropy-healpix>=1.0.2",
    "astropy>=7.0.0",
    "sdss-coordio>=1.13.0",
    "typer>=0.13.0",
    "polars>=1.17.1"
]

# [tool.uv.sources]
# sdss-target-selection = { git = "https://github.com/sdss/target_selection.git", branch = "main" }

[project.optional-dependencies]
lts = ["polars-lts-cpu>=1.17.1"]

[project.urls]
Homepage = "https://github.com/sdss/too"
Repository = "https://github.com/sdss/too"
Documentation = "https://sdss-too.readthedocs.org"

[project.scripts]
too = "too.__main__:too_cli"

[dependency-groups]
dev = [
    "ipython>=8.21.0",
    "ipdb>=0.12.3",
    "ruff>=0.1.0",
    "pytest>=8.0.0",
    "pytest-sugar>=1.0.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.4.1",
    "pytest-mock>=3.14.0"
]

[tool.uv]
package = true
default-groups = ["dev"]

[tool.ruff]
line-length = 88
target-version = 'py312'
exclude = ["typings/"]

[tool.ruff.lint]
select = ["E", "F", "I"]
unfixable = ["F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]

[tool.ruff.lint.isort]
known-first-party = ["too"]
lines-after-imports = 2
section-order = ["future", "standard-library", "typing", "third-party", "sdss", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
typing = ["typing"]
sdss = ["sdsstools", "target_selection", "sdssdb", "coordio"]

[tool.pytest.ini_options]
addopts = "--cov too --cov-report xml --cov-report html --cov-report term -W ignore"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
include = ["src/too/*"]
omit = [
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "# pragma: no cover",
    "NotImplementedError",
    'if __name__ == "__main__":'
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["src/too"]

[tool.hatch.build.targets.wheel]
packages = ["src/too"]
